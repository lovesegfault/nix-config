name: CI
on:
  push:
    branches:
      - master
      - try
      - flake-update
jobs:
  lints:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/ipa0c64h689jb4ys6hxsky2r8xpld0hv/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: lints
        run: |
          nix build -L .#checks.x86_64-linux.pre-commit-check || exit 1
          nix-instantiate --parse **/*.nix >& /dev/null || exit 1

  get-hosts:
    name: Get hosts
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-hosts.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/ipa0c64h689jb4ys6hxsky2r8xpld0hv/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - id: get-hosts
        run: |
          echo "::set-output name=matrix::$(nix eval --json -f ./nix/hosts.nix | jq -c 'del(.foucault,.hegel) | { host: keys }')"

  build-host:
    name: Build ${{ matrix.host }}
    runs-on: ubuntu-latest
    needs: get-hosts
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-hosts.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/ipa0c64h689jb4ys6hxsky2r8xpld0hv/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: experimental-features = nix-command flakes
      - name: AArch64
        env:
          AARCH64_BOX_KEY: ${{ secrets.AARCH64_BOX_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        run: |
          sudo mkdir -p /root/.ssh
          echo "$AARCH64_BOX_KEY" | sudo tee /root/.ssh/aarch64.community.nixos > /dev/null
          sudo chmod 0600 /root/.ssh/aarch64.community.nixos
          echo "$KNOWN_HOSTS" | sudo tee -a /root/.ssh/known_hosts > /dev/null
          nix_cfg=(
            "builders-use-substitutes = true"
          )
          builder_cfg=(
            lovesegfault@aarch64.nixos.community
            aarch64-linux
            /root/.ssh/aarch64.community.nixos
            64
            8
            big-parallel
          )
          echo "${builder_cfg[*]}" | sudo tee /etc/nix/machines > /dev/null
          echo "${nix_cfg[*]}" | sudo tee -a /etc/nix/nix.conf > /dev/null
      - uses: cachix/cachix-action@v10
        with:
          name: nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: nix build
        run: |
          cachix watch-exec nix-config -- \
            nix run nixpkgs#nix-build-uncached -- \
              -A packages.x86_64-linux.hosts.${{ matrix.host }}
